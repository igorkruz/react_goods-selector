{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","useState","product","setProduct","className","type","onClick","map","productName","selectedProduct","classNames","handleSelectedProduct","ReactDOM","render","document","getElementById"],"mappings":"sOAMaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAKWC,EAAgB,WAC3B,MAA8BC,mBAAkB,OAAhD,mBAAOC,EAAP,KAAgBC,EAAhB,KAeA,OACE,uBAAMC,UAAU,oBAAhB,UACGF,EAEG,qBAAIE,UAAU,sCAAd,oBACMF,EADN,gBAKI,wBACE,UAAQ,cACRG,KAAK,SACLD,UAAU,cACVE,QA1BM,WAClBH,EAAW,YA8BL,oBAAIC,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCACGL,EAAMQ,KAAI,SAAAC,GACT,IAAMC,EAAkBD,IAAgBN,EAExC,OACE,qBAEE,UAAQ,OACRE,UAAWM,IAAW,CACpB,+BAAgCD,IAJpC,UAOE,6BACE,wBACE,UAASA,EACL,eACA,YACJJ,KAAK,SACLD,UAAWM,IAAW,SAAU,CAC9B,iBAAkBD,IAEpBH,QAAS,kBAnDG,SAC5BE,EACAC,GAEAN,EAAWM,EACP,KACAD,GA6C2BG,CACbH,EACAC,IAVJ,SAaGA,EAAkB,IAAM,QAI7B,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACGI,MAzBEA,cC7DrBI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e975ee88.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Product = string | null;\n\nexport const App: React.FC = () => {\n  const [product, setProduct] = useState<Product>('Jam');\n\n  const handleClear = () => {\n    setProduct(null);\n  };\n\n  const handleSelectedProduct = (\n    productName: string,\n    selectedProduct: boolean,\n  ) => {\n    setProduct(selectedProduct\n      ? null\n      : productName);\n  };\n\n  return (\n    <main className=\"section container\">\n      {product\n        ? (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {`${product} is selected`}\n\n            {(\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={handleClear}\n              />\n            )}\n          </h1>\n        )\n        : <h1 className=\"title\">No goods selected</h1> }\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map(productName => {\n            const selectedProduct = productName === product;\n\n            return (\n              <tr\n                key={productName}\n                data-cy=\"Good\"\n                className={classNames({\n                  'has-background-success-light': selectedProduct,\n                })}\n              >\n                <td>\n                  <button\n                    data-cy={selectedProduct\n                      ? 'RemoveButton'\n                      : 'AddButton'}\n                    type=\"button\"\n                    className={classNames('button', {\n                      'button is-info': selectedProduct,\n                    })}\n                    onClick={() => handleSelectedProduct(\n                      productName,\n                      selectedProduct,\n                    )}\n                  >\n                    {selectedProduct ? '-' : '+'}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {productName}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}